{"version":3,"sources":["components/BackgroundPics.js","components/CountryItem.js","components/Countries.js","components/App.js","index.js","assets/fonts/againts.otf"],"names":["SummerPic","styled","img","withConfig","displayName","componentId","_ref2","theme","WinterPic","_ref3","WindyPic","_ref4","CloudyPic","_ref5","HumidPic","_ref6","DryPic","_ref7","FoggyPic","_ref8","BackgroundPics","_ref","currentlySelected","react_default","a","createElement","Fragment","src","alt","CountryItem","_ref$country","country","countryName","code","capital","currentTemp","windSpeed","cloudiness","humidity","visibility","ownIndex","currentFilter","StyledDiv","RankingContainer","Ranking","FlagContainer","CountryFlag","concat","toLowerCase","CountryContainer","InfoContainer","Text","toFixed","Thermometer","temp","div","p","span","FaThermometerHalf","COUNTRIES_QUERY","gql","_templateObject","Countries","_this","this","props","react_apollo_esm","query","loading","error","data","LoaderContainer","react_spinners","console","log","sortParameter","sortOrder","sortedData","orderBy","citiesWeather","Countries_StyledDiv","HeadingContainer","Countries_Text","StyledSelect","value","onChange","handleChange","CountryList","slice","map","key","indexOf","Component","select","uri","App","state","client","loaded","componentDidMount","_callee","parsedCache","timeNow","cache","persistor","lastFetchedTime","regenerator_default","wrap","_context","prev","next","JSON","parse","localStorage","getItem","Date","now","InMemoryCache","ApolloClient","CachePersistor","storage","window","lastFetchedAt","purge","restore","t0","t1","setState","stop","e","target","_this$state","GlobalStyles","dist","App_StyledDiv","components_BackgroundPics","Heading","components_Countries","React","createGlobalStyle","App_templateObject","againts","h1","ReactDOM","render","components_App","document","querySelector","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.72f7baa3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst BackgroundPics = ({ currentlySelected }) => (\n  <React.Fragment>\n    <SummerPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/f_auto/v1566754501/extreme-weather/summer_ej4xdq.jpg'\n      alt='Summer'\n      theme={currentlySelected}\n    />\n    <WinterPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/f_auto/v1566754495/extreme-weather/winter_tp5fj7.jpg'\n      alt='Winter'\n      theme={currentlySelected}\n    />\n    <WindyPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/f_auto/v1566754493/extreme-weather/wind_uya9x8.jpg'\n      alt='Wind'\n      theme={currentlySelected}\n    />\n    <CloudyPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/f_auto/v1566754509/extreme-weather/cloudy_jr5x1s.jpg'\n      alt='Cloudy'\n      theme={currentlySelected}\n    />\n    <HumidPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/f_auto/v1566754510/extreme-weather/humid_eh5sit.jpg'\n      alt='Humid'\n      theme={currentlySelected}\n    />\n    <DryPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/v1566756570/extreme-weather/dry_bwvepc.jpg'\n      alt='Dry'\n      theme={currentlySelected}\n    />\n    <FoggyPic\n      src='https://res.cloudinary.com/tiagological/image/upload/q_auto/v1566754514/extreme-weather/fog_j82fnf.jpg'\n      alt='Foggy'\n      theme={currentlySelected}\n    />\n  </React.Fragment>\n);\n\nconst SummerPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Hottest' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nconst WinterPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Coldest' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nconst WindyPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Windiest' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nconst CloudyPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Cloudiest' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nconst HumidPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Most Humid' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nconst DryPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Driest' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nconst FoggyPic = styled.img`\n  z-index: -1;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  opacity: ${({ theme }) => (theme === 'Least Visible' ? 1 : 0)};\n  transition: opacity 1s ease-in-out;\n`;\n\nexport default BackgroundPics;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { FaThermometerHalf } from 'react-icons/fa';\n\nexport default function CountryItem({\n  country: {\n    countryName,\n    code,\n    capital,\n    currentTemp,\n    windSpeed,\n    cloudiness,\n    humidity,\n    visibility\n  },\n  ownIndex,\n  currentFilter\n}) {\n  return (\n    <StyledDiv>\n      <RankingContainer>\n        <Ranking>\n          {ownIndex + 1}\n          {ownIndex + 1 === 1\n            ? 'st'\n            : ownIndex + 1 === 2\n            ? 'nd'\n            : ownIndex + 1 === 3\n            ? 'rd'\n            : 'th'}\n        </Ranking>\n      </RankingContainer>\n      <FlagContainer>\n        <CountryFlag\n          src={`https://flagcdn.com/60x45/${code.toLowerCase()}.png`}\n          alt={`${countryName} flag`}\n        />\n      </FlagContainer>\n      <CountryContainer>\n        <p>\n          {capital}, {countryName}\n        </p>\n      </CountryContainer>\n      <InfoContainer>\n        {(currentFilter === 'Hottest' || currentFilter === 'Coldest') && (\n          <React.Fragment>\n            <Text>\n              {currentTemp % 1 === 0 ? currentTemp : currentTemp.toFixed(1)} C\n            </Text>\n            <Thermometer temp={currentTemp} />\n          </React.Fragment>\n        )}\n        {currentFilter === 'Windiest' && (\n          <Text>{((windSpeed * 60 * 60) / 1000 / 1.60934).toFixed(1)} mph</Text>\n        )}\n        {currentFilter === 'Cloudiest' && <Text>{cloudiness}% cloudy</Text>}\n        {(currentFilter === 'Most Humid' || currentFilter === 'Driest') && (\n          <Text>{humidity}% humidity</Text>\n        )}\n        {currentFilter === 'Least Visible' && (\n          <Text>\n            {(visibility / 1000 / 1.60934).toFixed(1)} miles visibility\n          </Text>\n        )}\n      </InfoContainer>\n    </StyledDiv>\n  );\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #fff;\n  border-radius: 5px;\n  margin: 1rem 0;\n  padding: 1rem;\n  opacity: 0.8;\n`;\n\nconst RankingContainer = styled.div`\n  font-family: 'Permanent Marker', cursive;\n  margin: 1rem 0;\n`;\n\nconst Ranking = styled.p`\n  font-size: 2rem;\n  font-weight: 800;\n  margin: 0;\n`;\n\nconst FlagContainer = styled.div`\n  justify-content: center;\n`;\n\nconst CountryContainer = styled.div`\n  margin: 0 1rem;\n  flex-direction: row;\n  align-self: stretch;\n  text-align: center;\n`;\n\nconst CountryFlag = styled.img``;\n\nconst InfoContainer = styled.div`\n  align-items: center;\n  margin: 1rem 0;\n  text-align: center;\n  margin-top: auto;\n`;\n\nconst Text = styled.span`\n  font-size: 2rem;\n`;\n\nconst Thermometer = styled(FaThermometerHalf)`\n  transform: scale(2);\n  margin: 0 1rem;\n  color: ${({ temp }) =>\n    temp >= 40\n      ? 'red'\n      : temp >= 35\n      ? '#ff3700'\n      : temp < 0\n      ? 'blue'\n      : temp < 10\n      ? '#00a9ff'\n      : temp < 15\n      ? '#00ff7f'\n      : temp < 20\n      ? '#ffd800'\n      : '#ff6e00'};\n`;\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components/macro';\nimport CountryItem from './CountryItem';\nimport { BounceLoader } from 'react-spinners';\nimport 'animate.css';\nimport orderBy from 'lodash.orderby';\n\nconst COUNTRIES_QUERY = gql`\n  query CitiesTempQuery {\n    citiesWeather {\n      countryName\n      code\n      capital\n      currentTemp\n      humidity\n      windSpeed\n      cloudiness\n      visibility\n      error {\n        status\n        message\n      }\n    }\n    lastQuery {\n      lastFetchedAt\n    }\n  }\n`;\n\nclass Countries extends Component {\n  render() {\n    const currentFilter = this.props.currentlySelected;\n\n    return (\n      <React.Fragment>\n        <Query query={COUNTRIES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <LoaderContainer>\n                  <BounceLoader />\n                </LoaderContainer>\n              );\n            if (error) console.log(error);\n\n            const sortParameter =\n              currentFilter === 'Hottest' || currentFilter === 'Coldest'\n                ? 'currentTemp'\n                : currentFilter === 'Windiest'\n                ? 'windSpeed'\n                : currentFilter === 'Cloudiest'\n                ? 'cloudiness'\n                : currentFilter === 'Most Humid' || currentFilter === 'Driest'\n                ? 'humidity'\n                : 'visibility';\n\n            const sortOrder =\n              currentFilter === 'Coldest' ||\n              currentFilter === 'Least Visible' ||\n              currentFilter === 'Driest'\n                ? 'asc'\n                : 'desc';\n\n            const sortedData = orderBy(\n              data.citiesWeather,\n              [sortParameter],\n              [sortOrder]\n            );\n            return (\n              <StyledDiv>\n                <HeadingContainer>\n                  <Text currentFilter={currentFilter}>\n                    Top 20{' '}\n                    <StyledSelect\n                      value={currentFilter}\n                      onChange={this.props.handleChange}\n                      currentFilter={currentFilter}>\n                      <option value='Hottest'>Hottest </option>\n                      <option value='Coldest'>Coldest</option>\n                      <option value='Windiest'>Windiest</option>\n                      <option value='Cloudiest'>Cloudiest</option>\n                      <option value='Most Humid'>Humid</option>\n                      <option value='Driest'>Driest</option>\n                      <option value='Least Visible'>Foggiest</option>\n                    </StyledSelect>{' '}\n                    Capitals\n                  </Text>\n                </HeadingContainer>\n                <CountryList>\n                  {sortedData.slice(0, 20).map(country => (\n                    <CountryItem\n                      key={country.countryName}\n                      country={country}\n                      ownIndex={sortedData.indexOf(country)}\n                      currentFilter={currentFilter}\n                    />\n                  ))}\n                </CountryList>\n              </StyledDiv>\n            );\n          }}\n        </Query>\n      </React.Fragment>\n    );\n  }\n}\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  font-family: 'Montserrat', sans-serif;\n  padding: 2rem 1rem;\n`;\n\nconst HeadingContainer = styled.div`\n  text-align: center;\n`;\n\nconst CountryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  font-family: 'Montserrat', sans-serif;\n  padding: 2rem 1rem;\n\n  @media only screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 1rem;\n  }\n`;\n\nconst StyledSelect = styled.select`\n  outline: none;\n  border-radius: 5px;\n  border: 2px solid transparent;\n  text-align-last: center;\n  transition: all 200ms ease-in-out;\n\n  :hover {\n    border: ${({ currentFilter }) =>\n      currentFilter === 'Hottest'\n        ? '2px solid #ebb788'\n        : currentFilter === 'Coldest'\n        ? ' 2px solid #000000FF'\n        : '2px solid #909CC6'};\n  }\n\n  :focus {\n    box-shadow: ${({ currentFilter }) =>\n      currentFilter === 'Hottest'\n        ? '0 0 5px 2px #ebb788'\n        : currentFilter === 'Coldest'\n        ? '0 0 5px 2px #000000FF'\n        : currentFilter === 'Driest'\n        ? '0 0 5px 2px #8C5E45'\n        : '0 0 5px 2px #909CC6'};\n    border: ${({ currentFilter }) =>\n      currentFilter === 'Hottest'\n        ? '2px solid #ebb788'\n        : currentFilter === 'Coldest'\n        ? ' 2px solid #000000FF'\n        : '2px solid #909CC6'};\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 1rem auto;\n  color: ${({ currentFilter }) =>\n    currentFilter === 'Windiest' ||\n    currentFilter === 'Cloudiest' ||\n    currentFilter === 'Most Humid' ||\n    currentFilter === 'Driest'\n      ? '#fff'\n      : '#000'};\n  text-shadow: ${({ currentFilter }) =>\n    currentFilter === 'Most Humid' ? '0 0 5px #000' : null};\n\n  @media only screen and (min-width: 768px) {\n    font-size: 1.75rem;\n  }\n`;\n\nexport default Countries;\n","import React from 'react';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { CachePersistor } from 'apollo-cache-persist';\nimport BackgroundPics from './BackgroundPics';\nimport Countries from './Countries';\nimport styled, { createGlobalStyle } from 'styled-components/macro';\nimport { Normalize } from 'styled-normalize';\nimport againts from '../assets/fonts/againts.otf';\n\nconst uri =\n    process.env.NODE_ENV === 'production'\n        ? '/graphql'\n        : 'http://localhost:3001/graphql';\n\nclass App extends React.Component {\n    state = {\n        client: null,\n        loaded: false,\n        currentlySelected: 'Hottest',\n    };\n\n    componentDidMount = async () => {\n        const parsedCache = JSON.parse(\n            localStorage.getItem('apollo-cache-persist')\n        );\n\n        const oneHour = 3600000;\n\n        const timeNow = Date.now();\n\n        const cache = new InMemoryCache();\n\n        const client = new ApolloClient({\n            uri,\n            cache,\n        });\n\n        const persistor = new CachePersistor({\n            cache,\n            storage: window.localStorage,\n        });\n\n        if (parsedCache !== null) {\n            const lastFetchedTime =\n                parsedCache['$ROOT_QUERY.lastQuery'].lastFetchedAt;\n\n            if (timeNow - lastFetchedTime > oneHour) {\n                await persistor.purge();\n                console.log('Purging the Apollo cache...');\n            } else {\n                try {\n                    await persistor.restore();\n                    console.log('Restoring the Apollo cache...');\n                } catch (error) {\n                    console.error('Error restoring Apollo cache', error);\n                }\n            }\n        } else {\n            try {\n                await persistor.purge();\n                console.log('Purging the Apollo cache...');\n            } catch (error) {\n                console.error('Error purging Apollo cache', error);\n            }\n        }\n\n        this.setState({\n            client,\n            loaded: true,\n        });\n    };\n\n    state = {\n        currentlySelected: 'Hottest',\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            currentlySelected: e.target.value,\n        });\n    };\n\n    render() {\n        const { client, loaded, currentlySelected } = this.state;\n\n        if (!loaded) {\n            return <div>Loading...</div>;\n        }\n\n        return (\n            <ApolloProvider client={client}>\n                <GlobalStyles />\n                <Normalize />\n                <StyledDiv theme={currentlySelected}>\n                    <BackgroundPics currentlySelected={currentlySelected} />\n                    <Heading theme={currentlySelected}>\n                        Extreme Weather App\n                    </Heading>\n                    <Countries\n                        handleChange={this.handleChange}\n                        currentlySelected={currentlySelected}\n                    />\n                </StyledDiv>\n            </ApolloProvider>\n        );\n    }\n}\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: 'Againts';\n    src: url(${againts});\n  }\n\n  @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n  @import url('https://fonts.googleapis.com/css?family=Permanent+Marker&display=swap');\n\n  html {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  *,\n  *:before,\n  *:after {\n    -webkit-box-sizing: inherit;\n    box-sizing: inherit;\n  }\n  \n  html,\n  body {\n    height: 100%;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  \n  body {\n    margin: 0;\n  }\n  \n  #root {\n    height: 100%;\n    width: 100%;\n    position: fixed;\n  }\n`;\n\nconst StyledDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    overflow: auto;\n\n    padding: 0 1rem 2rem;\n`;\n\nconst Heading = styled.h1`\n    font-family: 'Permanent Marker', cursive;\n    letter-spacing: 2px;\n    font-size: 3rem;\n    color: ${({ theme }) =>\n        theme === 'Coldest'\n            ? '#000000FF'\n            : theme === 'Driest'\n            ? '#8C5E45'\n            : '#fbfbf8'};\n    text-align: center;\n    text-shadow: ${({ theme }) =>\n        theme === 'Driest' || theme === 'Coldest'\n            ? '0 0 5px #fbfbf8'\n            : '0 0 5px #000'};\n    transition: color 1s ease-in-out;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","module.exports = __webpack_public_path__ + \"static/media/againts.cfb1a320.otf\";"],"sourceRoot":""}